// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRO219_WebsiteBanDienThoai.Models;

#nullable disable

namespace PRO219_WebsiteBanDienThoai.Migrations
{
    [DbContext(typeof(ShoppingDbContext))]
    partial class ShoppingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAccount");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CitizenId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Battery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Battery");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IdAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAccount");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.BillDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdBill")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDiscount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdBill");

                    b.HasIndex("IdDiscount");

                    b.ToTable("BillDetails");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.BillPhoneDetail", b =>
                {
                    b.Property<Guid>("BillDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PhoneDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BillDetailId", "PhoneDetailId");

                    b.HasIndex("PhoneDetailId");

                    b.ToTable("BillPhoneDetails");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Blog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Cart", b =>
                {
                    b.Property<Guid?>("IdAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAccount");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.CartDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPhoneDetaild")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAccount");

                    b.HasIndex("IdPhoneDetaild");

                    b.ToTable("CartsDetails");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.ChargingportType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChargingportType");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.ChipCPUs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChipCPUs");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.ChipGPUs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChipGPUs");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Color", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ReducedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeForm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Imei", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdPhoneDetaild")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NameImei")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPhoneDetaild");

                    b.ToTable("Imei");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.ListImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdColor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdPhoneDetaild")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdPhoneDetaild");

                    b.ToTable("ListImage");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.OperatingSystems", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OperatingSystem");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CardId")
                        .HasColumnType("int");

                    b.Property<int?>("CvvCode")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QrCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Phone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdProductionCompany")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProductionCompany");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.PhoneDetaild", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FrontCamera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdBattery")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdChargingport")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdChipCPU")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdChipGPU")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdColor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdDiscount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMaterial")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdOperatingSystem")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPhone")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdRam")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdRom")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSim")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MainCamera")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Resolution")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdBattery");

                    b.HasIndex("IdChargingport");

                    b.HasIndex("IdChipGPU");

                    b.HasIndex("IdColor");

                    b.HasIndex("IdDiscount");

                    b.HasIndex("IdMaterial");

                    b.HasIndex("IdOperatingSystem");

                    b.HasIndex("IdPhone");

                    b.HasIndex("IdRam");

                    b.HasIndex("IdRom");

                    b.HasIndex("IdSim");

                    b.ToTable("PhoneDetailds");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.ProductionCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductionCompany");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Ram", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ram");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Rank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateRank")
                        .HasColumnType("datetime2");

                    b.Property<string>("Policies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Requirement")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPhoneDetaild")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PhoneDetaildsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AccountsId");

                    b.HasIndex("PhoneDetaildsId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Rom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rom");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Sim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sim");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdBill")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPayment")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdBill");

                    b.HasIndex("IdPayment");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Warranty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdPhone")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdPhone");

                    b.ToTable("Warranty");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.WarrantyCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdBillDetail")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdBillDetail");

                    b.ToTable("WarrantyCards");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Address", b =>
                {
                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.Account", "Accounts")
                        .WithMany()
                        .HasForeignKey("IdAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Bill", b =>
                {
                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.Account", "Accounts")
                        .WithMany()
                        .HasForeignKey("IdAccount");

                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.BillDetails", b =>
                {
                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.Bill", "Bills")
                        .WithMany()
                        .HasForeignKey("IdBill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.Discount", "Discounts")
                        .WithMany()
                        .HasForeignKey("IdDiscount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bills");

                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.BillPhoneDetail", b =>
                {
                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.BillDetails", "BillDetails")
                        .WithMany()
                        .HasForeignKey("BillDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.PhoneDetaild", "PhoneDetaild")
                        .WithMany()
                        .HasForeignKey("PhoneDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillDetails");

                    b.Navigation("PhoneDetaild");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Cart", b =>
                {
                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.Account", "Accounts")
                        .WithOne("Carts")
                        .HasForeignKey("PRO219_WebsiteBanDienThoai.Models.Cart", "IdAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.CartDetails", b =>
                {
                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.Cart", "Carts")
                        .WithMany()
                        .HasForeignKey("IdAccount");

                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.PhoneDetaild", "PhoneDetailds")
                        .WithMany()
                        .HasForeignKey("IdPhoneDetaild")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carts");

                    b.Navigation("PhoneDetailds");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Imei", b =>
                {
                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.PhoneDetaild", "PhoneDetailds")
                        .WithMany()
                        .HasForeignKey("IdPhoneDetaild");

                    b.Navigation("PhoneDetailds");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.ListImage", b =>
                {
                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.PhoneDetaild", "PhoneDetailds")
                        .WithMany()
                        .HasForeignKey("IdPhoneDetaild");

                    b.Navigation("PhoneDetailds");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Phone", b =>
                {
                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.ProductionCompany", "ProductionCompanies")
                        .WithMany()
                        .HasForeignKey("IdProductionCompany")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductionCompanies");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.PhoneDetaild", b =>
                {
                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.Battery", "Batteries")
                        .WithMany()
                        .HasForeignKey("IdBattery")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.ChargingportType", "ChargingportTypes")
                        .WithMany()
                        .HasForeignKey("IdChargingport")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.ChipCPUs", "ChipCPUs")
                        .WithMany()
                        .HasForeignKey("IdChipGPU")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.ChipGPUs", "ChipGPUs")
                        .WithMany()
                        .HasForeignKey("IdChipGPU")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.Color", "Colors")
                        .WithMany()
                        .HasForeignKey("IdColor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.Discount", "Discounts")
                        .WithMany()
                        .HasForeignKey("IdDiscount");

                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.Material", "Materials")
                        .WithMany()
                        .HasForeignKey("IdMaterial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.OperatingSystems", "OperatingSystems")
                        .WithMany()
                        .HasForeignKey("IdOperatingSystem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.Phone", "Phones")
                        .WithMany()
                        .HasForeignKey("IdPhone")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.Ram", "Rams")
                        .WithMany()
                        .HasForeignKey("IdRam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.Rom", "Roms")
                        .WithMany()
                        .HasForeignKey("IdRom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.Sim", "Sims")
                        .WithMany()
                        .HasForeignKey("IdSim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batteries");

                    b.Navigation("ChargingportTypes");

                    b.Navigation("ChipCPUs");

                    b.Navigation("ChipGPUs");

                    b.Navigation("Colors");

                    b.Navigation("Discounts");

                    b.Navigation("Materials");

                    b.Navigation("OperatingSystems");

                    b.Navigation("Phones");

                    b.Navigation("Rams");

                    b.Navigation("Roms");

                    b.Navigation("Sims");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Review", b =>
                {
                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.Account", "Accounts")
                        .WithMany()
                        .HasForeignKey("AccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.PhoneDetaild", "PhoneDetailds")
                        .WithMany()
                        .HasForeignKey("PhoneDetaildsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accounts");

                    b.Navigation("PhoneDetailds");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Transaction", b =>
                {
                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.Bill", "Bills")
                        .WithMany()
                        .HasForeignKey("IdBill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.Payment", "Payments")
                        .WithMany()
                        .HasForeignKey("IdPayment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bills");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Warranty", b =>
                {
                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.Phone", "Phones")
                        .WithMany()
                        .HasForeignKey("IdPhone")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phones");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.WarrantyCard", b =>
                {
                    b.HasOne("PRO219_WebsiteBanDienThoai.Models.BillDetails", "BillDetails")
                        .WithMany()
                        .HasForeignKey("IdBillDetail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillDetails");
                });

            modelBuilder.Entity("PRO219_WebsiteBanDienThoai.Models.Account", b =>
                {
                    b.Navigation("Carts");
                });
#pragma warning restore 612, 618
        }
    }
}
